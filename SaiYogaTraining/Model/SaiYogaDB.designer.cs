#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SaiYogaTraining.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SaiYogaDB")]
	public partial class SaiYogaDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAttendance(Attendance instance);
    partial void UpdateAttendance(Attendance instance);
    partial void DeleteAttendance(Attendance instance);
    partial void InsertTrainee(Trainee instance);
    partial void UpdateTrainee(Trainee instance);
    partial void DeleteTrainee(Trainee instance);
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertLogin(Login instance);
    partial void UpdateLogin(Login instance);
    partial void DeleteLogin(Login instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertSalary(Salary instance);
    partial void UpdateSalary(Salary instance);
    partial void DeleteSalary(Salary instance);
    partial void InsertSchedule(Schedule instance);
    partial void UpdateSchedule(Schedule instance);
    partial void DeleteSchedule(Schedule instance);
    partial void InsertTeacher(Teacher instance);
    partial void UpdateTeacher(Teacher instance);
    partial void DeleteTeacher(Teacher instance);
    partial void InsertTeacherAttendance(TeacherAttendance instance);
    partial void UpdateTeacherAttendance(TeacherAttendance instance);
    partial void DeleteTeacherAttendance(TeacherAttendance instance);
    #endregion
		
		public SaiYogaDBDataContext() : 
				base(global::SaiYogaTraining.Properties.Settings.Default.SaiYogaDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SaiYogaDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SaiYogaDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SaiYogaDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SaiYogaDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Attendance> Attendances
		{
			get
			{
				return this.GetTable<Attendance>();
			}
		}
		
		public System.Data.Linq.Table<Trainee> Trainees
		{
			get
			{
				return this.GetTable<Trainee>();
			}
		}
		
		public System.Data.Linq.Table<Course> Courses
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<Login> Logins
		{
			get
			{
				return this.GetTable<Login>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<Salary> Salaries
		{
			get
			{
				return this.GetTable<Salary>();
			}
		}
		
		public System.Data.Linq.Table<Schedule> Schedules
		{
			get
			{
				return this.GetTable<Schedule>();
			}
		}
		
		public System.Data.Linq.Table<Teacher> Teachers
		{
			get
			{
				return this.GetTable<Teacher>();
			}
		}
		
		public System.Data.Linq.Table<TeacherAttendance> TeacherAttendances
		{
			get
			{
				return this.GetTable<TeacherAttendance>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attendance")]
	public partial class Attendance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sr_no;
		
		private System.DateTime _adate;
		
		private string _status;
		
		private System.Nullable<int> _enroll_no;
		
		private EntityRef<Trainee> _Trainee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsr_noChanging(int value);
    partial void Onsr_noChanged();
    partial void OnadateChanging(System.DateTime value);
    partial void OnadateChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onenroll_noChanging(System.Nullable<int> value);
    partial void Onenroll_noChanged();
    #endregion
		
		public Attendance()
		{
			this._Trainee = default(EntityRef<Trainee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sr_no", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sr_no
		{
			get
			{
				return this._sr_no;
			}
			set
			{
				if ((this._sr_no != value))
				{
					this.Onsr_noChanging(value);
					this.SendPropertyChanging();
					this._sr_no = value;
					this.SendPropertyChanged("sr_no");
					this.Onsr_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adate", DbType="Date NOT NULL")]
		public System.DateTime adate
		{
			get
			{
				return this._adate;
			}
			set
			{
				if ((this._adate != value))
				{
					this.OnadateChanging(value);
					this.SendPropertyChanging();
					this._adate = value;
					this.SendPropertyChanged("adate");
					this.OnadateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(255)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enroll_no", DbType="Int")]
		public System.Nullable<int> enroll_no
		{
			get
			{
				return this._enroll_no;
			}
			set
			{
				if ((this._enroll_no != value))
				{
					if (this._Trainee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onenroll_noChanging(value);
					this.SendPropertyChanging();
					this._enroll_no = value;
					this.SendPropertyChanged("enroll_no");
					this.Onenroll_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trainee_Attendance", Storage="_Trainee", ThisKey="enroll_no", OtherKey="enroll_no", IsForeignKey=true)]
		public Trainee Trainee
		{
			get
			{
				return this._Trainee.Entity;
			}
			set
			{
				Trainee previousValue = this._Trainee.Entity;
				if (((previousValue != value) 
							|| (this._Trainee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Trainee.Entity = null;
						previousValue.Attendances.Remove(this);
					}
					this._Trainee.Entity = value;
					if ((value != null))
					{
						value.Attendances.Add(this);
						this._enroll_no = value.enroll_no;
					}
					else
					{
						this._enroll_no = default(Nullable<int>);
					}
					this.SendPropertyChanged("Trainee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Trainee")]
	public partial class Trainee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _enroll_no;
		
		private string _tname;
		
		private string _taddress;
		
		private string _contact;
		
		private System.Nullable<System.DateTime> _enroll_date;
		
		private System.Nullable<int> _course_id;
		
		private System.Data.Linq.Binary _image;
		
		private EntitySet<Attendance> _Attendances;
		
		private EntitySet<Payment> _Payments;
		
		private EntityRef<Course> _Course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onenroll_noChanging(int value);
    partial void Onenroll_noChanged();
    partial void OntnameChanging(string value);
    partial void OntnameChanged();
    partial void OntaddressChanging(string value);
    partial void OntaddressChanged();
    partial void OncontactChanging(string value);
    partial void OncontactChanged();
    partial void Onenroll_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onenroll_dateChanged();
    partial void Oncourse_idChanging(System.Nullable<int> value);
    partial void Oncourse_idChanged();
    partial void OnimageChanging(System.Data.Linq.Binary value);
    partial void OnimageChanged();
    #endregion
		
		public Trainee()
		{
			this._Attendances = new EntitySet<Attendance>(new Action<Attendance>(this.attach_Attendances), new Action<Attendance>(this.detach_Attendances));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Course = default(EntityRef<Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enroll_no", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int enroll_no
		{
			get
			{
				return this._enroll_no;
			}
			set
			{
				if ((this._enroll_no != value))
				{
					this.Onenroll_noChanging(value);
					this.SendPropertyChanging();
					this._enroll_no = value;
					this.SendPropertyChanged("enroll_no");
					this.Onenroll_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tname", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string tname
		{
			get
			{
				return this._tname;
			}
			set
			{
				if ((this._tname != value))
				{
					this.OntnameChanging(value);
					this.SendPropertyChanging();
					this._tname = value;
					this.SendPropertyChanged("tname");
					this.OntnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taddress", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string taddress
		{
			get
			{
				return this._taddress;
			}
			set
			{
				if ((this._taddress != value))
				{
					this.OntaddressChanging(value);
					this.SendPropertyChanging();
					this._taddress = value;
					this.SendPropertyChanged("taddress");
					this.OntaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact", DbType="VarChar(255)")]
		public string contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enroll_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> enroll_date
		{
			get
			{
				return this._enroll_date;
			}
			set
			{
				if ((this._enroll_date != value))
				{
					this.Onenroll_dateChanging(value);
					this.SendPropertyChanging();
					this._enroll_date = value;
					this.SendPropertyChanged("enroll_date");
					this.Onenroll_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_id", DbType="Int")]
		public System.Nullable<int> course_id
		{
			get
			{
				return this._course_id;
			}
			set
			{
				if ((this._course_id != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncourse_idChanging(value);
					this.SendPropertyChanging();
					this._course_id = value;
					this.SendPropertyChanged("course_id");
					this.Oncourse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trainee_Attendance", Storage="_Attendances", ThisKey="enroll_no", OtherKey="enroll_no")]
		public EntitySet<Attendance> Attendances
		{
			get
			{
				return this._Attendances;
			}
			set
			{
				this._Attendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trainee_Payment", Storage="_Payments", ThisKey="enroll_no", OtherKey="enroll_no")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Trainee", Storage="_Course", ThisKey="course_id", OtherKey="course_id", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.Trainees.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.Trainees.Add(this);
						this._course_id = value.course_id;
					}
					else
					{
						this._course_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Attendances(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.Trainee = this;
		}
		
		private void detach_Attendances(Attendance entity)
		{
			this.SendPropertyChanging();
			entity.Trainee = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Trainee = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Trainee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course")]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _course_id;
		
		private string _course_name;
		
		private System.DateTime _duration;
		
		private string _ctype;
		
		private string _benefits;
		
		private System.Data.Linq.Binary _image;
		
		private EntitySet<Trainee> _Trainees;
		
		private EntitySet<Schedule> _Schedules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncourse_idChanging(int value);
    partial void Oncourse_idChanged();
    partial void Oncourse_nameChanging(string value);
    partial void Oncourse_nameChanged();
    partial void OndurationChanging(System.DateTime value);
    partial void OndurationChanged();
    partial void OnctypeChanging(string value);
    partial void OnctypeChanged();
    partial void OnbenefitsChanging(string value);
    partial void OnbenefitsChanged();
    partial void OnimageChanging(System.Data.Linq.Binary value);
    partial void OnimageChanged();
    #endregion
		
		public Course()
		{
			this._Trainees = new EntitySet<Trainee>(new Action<Trainee>(this.attach_Trainees), new Action<Trainee>(this.detach_Trainees));
			this._Schedules = new EntitySet<Schedule>(new Action<Schedule>(this.attach_Schedules), new Action<Schedule>(this.detach_Schedules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int course_id
		{
			get
			{
				return this._course_id;
			}
			set
			{
				if ((this._course_id != value))
				{
					this.Oncourse_idChanging(value);
					this.SendPropertyChanging();
					this._course_id = value;
					this.SendPropertyChanged("course_id");
					this.Oncourse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string course_name
		{
			get
			{
				return this._course_name;
			}
			set
			{
				if ((this._course_name != value))
				{
					this.Oncourse_nameChanging(value);
					this.SendPropertyChanging();
					this._course_name = value;
					this.SendPropertyChanged("course_name");
					this.Oncourse_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duration", DbType="DateTime NOT NULL")]
		public System.DateTime duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ctype", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ctype
		{
			get
			{
				return this._ctype;
			}
			set
			{
				if ((this._ctype != value))
				{
					this.OnctypeChanging(value);
					this.SendPropertyChanging();
					this._ctype = value;
					this.SendPropertyChanged("ctype");
					this.OnctypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_benefits", DbType="VarChar(255)")]
		public string benefits
		{
			get
			{
				return this._benefits;
			}
			set
			{
				if ((this._benefits != value))
				{
					this.OnbenefitsChanging(value);
					this.SendPropertyChanging();
					this._benefits = value;
					this.SendPropertyChanged("benefits");
					this.OnbenefitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Trainee", Storage="_Trainees", ThisKey="course_id", OtherKey="course_id")]
		public EntitySet<Trainee> Trainees
		{
			get
			{
				return this._Trainees;
			}
			set
			{
				this._Trainees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Schedule", Storage="_Schedules", ThisKey="course_id", OtherKey="course_id")]
		public EntitySet<Schedule> Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				this._Schedules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Trainees(Trainee entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_Trainees(Trainee entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void attach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login")]
	public partial class Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sr_no;
		
		private string _userid;
		
		private string _passwd;
		
		private string _ltype;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsr_noChanging(int value);
    partial void Onsr_noChanged();
    partial void OnuseridChanging(string value);
    partial void OnuseridChanged();
    partial void OnpasswdChanging(string value);
    partial void OnpasswdChanged();
    partial void OnltypeChanging(string value);
    partial void OnltypeChanged();
    #endregion
		
		public Login()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sr_no", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sr_no
		{
			get
			{
				return this._sr_no;
			}
			set
			{
				if ((this._sr_no != value))
				{
					this.Onsr_noChanging(value);
					this.SendPropertyChanging();
					this._sr_no = value;
					this.SendPropertyChanged("sr_no");
					this.Onsr_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwd", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string passwd
		{
			get
			{
				return this._passwd;
			}
			set
			{
				if ((this._passwd != value))
				{
					this.OnpasswdChanging(value);
					this.SendPropertyChanging();
					this._passwd = value;
					this.SendPropertyChanged("passwd");
					this.OnpasswdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ltype", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ltype
		{
			get
			{
				return this._ltype;
			}
			set
			{
				if ((this._ltype != value))
				{
					this.OnltypeChanging(value);
					this.SendPropertyChanging();
					this._ltype = value;
					this.SendPropertyChanged("ltype");
					this.OnltypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pay_id;
		
		private int _pay_amount;
		
		private System.Nullable<int> _balance;
		
		private System.DateTime _pay_date;
		
		private string _pay_type;
		
		private string _other;
		
		private System.Nullable<int> _enroll_no;
		
		private EntityRef<Trainee> _Trainee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpay_idChanging(int value);
    partial void Onpay_idChanged();
    partial void Onpay_amountChanging(int value);
    partial void Onpay_amountChanged();
    partial void OnbalanceChanging(System.Nullable<int> value);
    partial void OnbalanceChanged();
    partial void Onpay_dateChanging(System.DateTime value);
    partial void Onpay_dateChanged();
    partial void Onpay_typeChanging(string value);
    partial void Onpay_typeChanged();
    partial void OnotherChanging(string value);
    partial void OnotherChanged();
    partial void Onenroll_noChanging(System.Nullable<int> value);
    partial void Onenroll_noChanged();
    #endregion
		
		public Payment()
		{
			this._Trainee = default(EntityRef<Trainee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pay_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pay_id
		{
			get
			{
				return this._pay_id;
			}
			set
			{
				if ((this._pay_id != value))
				{
					this.Onpay_idChanging(value);
					this.SendPropertyChanging();
					this._pay_id = value;
					this.SendPropertyChanged("pay_id");
					this.Onpay_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pay_amount", DbType="Int NOT NULL")]
		public int pay_amount
		{
			get
			{
				return this._pay_amount;
			}
			set
			{
				if ((this._pay_amount != value))
				{
					this.Onpay_amountChanging(value);
					this.SendPropertyChanging();
					this._pay_amount = value;
					this.SendPropertyChanged("pay_amount");
					this.Onpay_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Int")]
		public System.Nullable<int> balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pay_date", DbType="Date NOT NULL")]
		public System.DateTime pay_date
		{
			get
			{
				return this._pay_date;
			}
			set
			{
				if ((this._pay_date != value))
				{
					this.Onpay_dateChanging(value);
					this.SendPropertyChanging();
					this._pay_date = value;
					this.SendPropertyChanged("pay_date");
					this.Onpay_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pay_type", DbType="VarChar(255)")]
		public string pay_type
		{
			get
			{
				return this._pay_type;
			}
			set
			{
				if ((this._pay_type != value))
				{
					this.Onpay_typeChanging(value);
					this.SendPropertyChanging();
					this._pay_type = value;
					this.SendPropertyChanged("pay_type");
					this.Onpay_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_other", DbType="VarChar(255)")]
		public string other
		{
			get
			{
				return this._other;
			}
			set
			{
				if ((this._other != value))
				{
					this.OnotherChanging(value);
					this.SendPropertyChanging();
					this._other = value;
					this.SendPropertyChanged("other");
					this.OnotherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enroll_no", DbType="Int")]
		public System.Nullable<int> enroll_no
		{
			get
			{
				return this._enroll_no;
			}
			set
			{
				if ((this._enroll_no != value))
				{
					if (this._Trainee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onenroll_noChanging(value);
					this.SendPropertyChanging();
					this._enroll_no = value;
					this.SendPropertyChanged("enroll_no");
					this.Onenroll_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trainee_Payment", Storage="_Trainee", ThisKey="enroll_no", OtherKey="enroll_no", IsForeignKey=true)]
		public Trainee Trainee
		{
			get
			{
				return this._Trainee.Entity;
			}
			set
			{
				Trainee previousValue = this._Trainee.Entity;
				if (((previousValue != value) 
							|| (this._Trainee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Trainee.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Trainee.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._enroll_no = value.enroll_no;
					}
					else
					{
						this._enroll_no = default(Nullable<int>);
					}
					this.SendPropertyChanged("Trainee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Salary")]
	public partial class Salary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _salary_no;
		
		private int _total_no_hrs;
		
		private int _charges_per_hrs;
		
		private int _total;
		
		private System.DateTime _pay_date;
		
		private System.Nullable<int> _teacher_id;
		
		private EntityRef<Teacher> _Teacher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsalary_noChanging(int value);
    partial void Onsalary_noChanged();
    partial void Ontotal_no_hrsChanging(int value);
    partial void Ontotal_no_hrsChanged();
    partial void Oncharges_per_hrsChanging(int value);
    partial void Oncharges_per_hrsChanged();
    partial void OntotalChanging(int value);
    partial void OntotalChanged();
    partial void Onpay_dateChanging(System.DateTime value);
    partial void Onpay_dateChanged();
    partial void Onteacher_idChanging(System.Nullable<int> value);
    partial void Onteacher_idChanged();
    #endregion
		
		public Salary()
		{
			this._Teacher = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary_no", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int salary_no
		{
			get
			{
				return this._salary_no;
			}
			set
			{
				if ((this._salary_no != value))
				{
					this.Onsalary_noChanging(value);
					this.SendPropertyChanging();
					this._salary_no = value;
					this.SendPropertyChanged("salary_no");
					this.Onsalary_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_no_hrs", DbType="Int NOT NULL")]
		public int total_no_hrs
		{
			get
			{
				return this._total_no_hrs;
			}
			set
			{
				if ((this._total_no_hrs != value))
				{
					this.Ontotal_no_hrsChanging(value);
					this.SendPropertyChanging();
					this._total_no_hrs = value;
					this.SendPropertyChanged("total_no_hrs");
					this.Ontotal_no_hrsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_charges_per_hrs", DbType="Int NOT NULL")]
		public int charges_per_hrs
		{
			get
			{
				return this._charges_per_hrs;
			}
			set
			{
				if ((this._charges_per_hrs != value))
				{
					this.Oncharges_per_hrsChanging(value);
					this.SendPropertyChanging();
					this._charges_per_hrs = value;
					this.SendPropertyChanged("charges_per_hrs");
					this.Oncharges_per_hrsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Int NOT NULL")]
		public int total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pay_date", DbType="Date NOT NULL")]
		public System.DateTime pay_date
		{
			get
			{
				return this._pay_date;
			}
			set
			{
				if ((this._pay_date != value))
				{
					this.Onpay_dateChanging(value);
					this.SendPropertyChanging();
					this._pay_date = value;
					this.SendPropertyChanged("pay_date");
					this.Onpay_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacher_id", DbType="Int")]
		public System.Nullable<int> teacher_id
		{
			get
			{
				return this._teacher_id;
			}
			set
			{
				if ((this._teacher_id != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onteacher_idChanging(value);
					this.SendPropertyChanging();
					this._teacher_id = value;
					this.SendPropertyChanged("teacher_id");
					this.Onteacher_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Salary", Storage="_Teacher", ThisKey="teacher_id", OtherKey="teacher_id", IsForeignKey=true)]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.Salaries.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.Salaries.Add(this);
						this._teacher_id = value.teacher_id;
					}
					else
					{
						this._teacher_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schedule")]
	public partial class Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _schedule_id;
		
		private System.Nullable<System.DateTime> _class_date;
		
		private System.Nullable<System.TimeSpan> _class_time;
		
		private System.Nullable<int> _teacher_id;
		
		private System.Nullable<int> _course_id;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<Teacher> _Teacher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onschedule_idChanging(int value);
    partial void Onschedule_idChanged();
    partial void Onclass_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onclass_dateChanged();
    partial void Onclass_timeChanging(System.Nullable<System.TimeSpan> value);
    partial void Onclass_timeChanged();
    partial void Onteacher_idChanging(System.Nullable<int> value);
    partial void Onteacher_idChanged();
    partial void Oncourse_idChanging(System.Nullable<int> value);
    partial void Oncourse_idChanged();
    #endregion
		
		public Schedule()
		{
			this._Course = default(EntityRef<Course>);
			this._Teacher = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schedule_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int schedule_id
		{
			get
			{
				return this._schedule_id;
			}
			set
			{
				if ((this._schedule_id != value))
				{
					this.Onschedule_idChanging(value);
					this.SendPropertyChanging();
					this._schedule_id = value;
					this.SendPropertyChanged("schedule_id");
					this.Onschedule_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_date", DbType="Date")]
		public System.Nullable<System.DateTime> class_date
		{
			get
			{
				return this._class_date;
			}
			set
			{
				if ((this._class_date != value))
				{
					this.Onclass_dateChanging(value);
					this.SendPropertyChanging();
					this._class_date = value;
					this.SendPropertyChanged("class_date");
					this.Onclass_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_time", DbType="Time")]
		public System.Nullable<System.TimeSpan> class_time
		{
			get
			{
				return this._class_time;
			}
			set
			{
				if ((this._class_time != value))
				{
					this.Onclass_timeChanging(value);
					this.SendPropertyChanging();
					this._class_time = value;
					this.SendPropertyChanged("class_time");
					this.Onclass_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacher_id", DbType="Int")]
		public System.Nullable<int> teacher_id
		{
			get
			{
				return this._teacher_id;
			}
			set
			{
				if ((this._teacher_id != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onteacher_idChanging(value);
					this.SendPropertyChanging();
					this._teacher_id = value;
					this.SendPropertyChanged("teacher_id");
					this.Onteacher_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_id", DbType="Int")]
		public System.Nullable<int> course_id
		{
			get
			{
				return this._course_id;
			}
			set
			{
				if ((this._course_id != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncourse_idChanging(value);
					this.SendPropertyChanging();
					this._course_id = value;
					this.SendPropertyChanged("course_id");
					this.Oncourse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Schedule", Storage="_Course", ThisKey="course_id", OtherKey="course_id", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.Schedules.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.Schedules.Add(this);
						this._course_id = value.course_id;
					}
					else
					{
						this._course_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Schedule", Storage="_Teacher", ThisKey="teacher_id", OtherKey="teacher_id", IsForeignKey=true)]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.Schedules.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.Schedules.Add(this);
						this._teacher_id = value.teacher_id;
					}
					else
					{
						this._teacher_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teacher")]
	public partial class Teacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _teacher_id;
		
		private string _tname;
		
		private string _taddress;
		
		private string _tphone;
		
		private string _tqualification;
		
		private EntitySet<Salary> _Salaries;
		
		private EntitySet<Schedule> _Schedules;
		
		private EntitySet<TeacherAttendance> _TeacherAttendances;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onteacher_idChanging(int value);
    partial void Onteacher_idChanged();
    partial void OntnameChanging(string value);
    partial void OntnameChanged();
    partial void OntaddressChanging(string value);
    partial void OntaddressChanged();
    partial void OntphoneChanging(string value);
    partial void OntphoneChanged();
    partial void OntqualificationChanging(string value);
    partial void OntqualificationChanged();
    #endregion
		
		public Teacher()
		{
			this._Salaries = new EntitySet<Salary>(new Action<Salary>(this.attach_Salaries), new Action<Salary>(this.detach_Salaries));
			this._Schedules = new EntitySet<Schedule>(new Action<Schedule>(this.attach_Schedules), new Action<Schedule>(this.detach_Schedules));
			this._TeacherAttendances = new EntitySet<TeacherAttendance>(new Action<TeacherAttendance>(this.attach_TeacherAttendances), new Action<TeacherAttendance>(this.detach_TeacherAttendances));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacher_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int teacher_id
		{
			get
			{
				return this._teacher_id;
			}
			set
			{
				if ((this._teacher_id != value))
				{
					this.Onteacher_idChanging(value);
					this.SendPropertyChanging();
					this._teacher_id = value;
					this.SendPropertyChanged("teacher_id");
					this.Onteacher_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tname", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string tname
		{
			get
			{
				return this._tname;
			}
			set
			{
				if ((this._tname != value))
				{
					this.OntnameChanging(value);
					this.SendPropertyChanging();
					this._tname = value;
					this.SendPropertyChanged("tname");
					this.OntnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taddress", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string taddress
		{
			get
			{
				return this._taddress;
			}
			set
			{
				if ((this._taddress != value))
				{
					this.OntaddressChanging(value);
					this.SendPropertyChanging();
					this._taddress = value;
					this.SendPropertyChanged("taddress");
					this.OntaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tphone", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string tphone
		{
			get
			{
				return this._tphone;
			}
			set
			{
				if ((this._tphone != value))
				{
					this.OntphoneChanging(value);
					this.SendPropertyChanging();
					this._tphone = value;
					this.SendPropertyChanged("tphone");
					this.OntphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tqualification", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string tqualification
		{
			get
			{
				return this._tqualification;
			}
			set
			{
				if ((this._tqualification != value))
				{
					this.OntqualificationChanging(value);
					this.SendPropertyChanging();
					this._tqualification = value;
					this.SendPropertyChanged("tqualification");
					this.OntqualificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Salary", Storage="_Salaries", ThisKey="teacher_id", OtherKey="teacher_id")]
		public EntitySet<Salary> Salaries
		{
			get
			{
				return this._Salaries;
			}
			set
			{
				this._Salaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_Schedule", Storage="_Schedules", ThisKey="teacher_id", OtherKey="teacher_id")]
		public EntitySet<Schedule> Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				this._Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_TeacherAttendance", Storage="_TeacherAttendances", ThisKey="teacher_id", OtherKey="teacher_id")]
		public EntitySet<TeacherAttendance> TeacherAttendances
		{
			get
			{
				return this._TeacherAttendances;
			}
			set
			{
				this._TeacherAttendances.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Salaries(Salary entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_Salaries(Salary entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
		
		private void attach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
		
		private void attach_TeacherAttendances(TeacherAttendance entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = this;
		}
		
		private void detach_TeacherAttendances(TeacherAttendance entity)
		{
			this.SendPropertyChanging();
			entity.Teacher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeacherAttendance")]
	public partial class TeacherAttendance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sr_no;
		
		private System.DateTime _tadate;
		
		private string _status;
		
		private System.Nullable<int> _hrs_per_day;
		
		private System.Nullable<int> _teacher_id;
		
		private EntityRef<Teacher> _Teacher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsr_noChanging(int value);
    partial void Onsr_noChanged();
    partial void OntadateChanging(System.DateTime value);
    partial void OntadateChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void Onhrs_per_dayChanging(System.Nullable<int> value);
    partial void Onhrs_per_dayChanged();
    partial void Onteacher_idChanging(System.Nullable<int> value);
    partial void Onteacher_idChanged();
    #endregion
		
		public TeacherAttendance()
		{
			this._Teacher = default(EntityRef<Teacher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sr_no", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sr_no
		{
			get
			{
				return this._sr_no;
			}
			set
			{
				if ((this._sr_no != value))
				{
					this.Onsr_noChanging(value);
					this.SendPropertyChanging();
					this._sr_no = value;
					this.SendPropertyChanged("sr_no");
					this.Onsr_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tadate", DbType="Date NOT NULL")]
		public System.DateTime tadate
		{
			get
			{
				return this._tadate;
			}
			set
			{
				if ((this._tadate != value))
				{
					this.OntadateChanging(value);
					this.SendPropertyChanging();
					this._tadate = value;
					this.SendPropertyChanged("tadate");
					this.OntadateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hrs_per_day", DbType="Int")]
		public System.Nullable<int> hrs_per_day
		{
			get
			{
				return this._hrs_per_day;
			}
			set
			{
				if ((this._hrs_per_day != value))
				{
					this.Onhrs_per_dayChanging(value);
					this.SendPropertyChanging();
					this._hrs_per_day = value;
					this.SendPropertyChanged("hrs_per_day");
					this.Onhrs_per_dayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacher_id", DbType="Int")]
		public System.Nullable<int> teacher_id
		{
			get
			{
				return this._teacher_id;
			}
			set
			{
				if ((this._teacher_id != value))
				{
					if (this._Teacher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onteacher_idChanging(value);
					this.SendPropertyChanging();
					this._teacher_id = value;
					this.SendPropertyChanged("teacher_id");
					this.Onteacher_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teacher_TeacherAttendance", Storage="_Teacher", ThisKey="teacher_id", OtherKey="teacher_id", IsForeignKey=true)]
		public Teacher Teacher
		{
			get
			{
				return this._Teacher.Entity;
			}
			set
			{
				Teacher previousValue = this._Teacher.Entity;
				if (((previousValue != value) 
							|| (this._Teacher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teacher.Entity = null;
						previousValue.TeacherAttendances.Remove(this);
					}
					this._Teacher.Entity = value;
					if ((value != null))
					{
						value.TeacherAttendances.Add(this);
						this._teacher_id = value.teacher_id;
					}
					else
					{
						this._teacher_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Teacher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
